<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.unlcn.ils.tps.E_authentication_typeMapper">	

<!-- ElementID:column_sql,Generated=true -->
<sql id="column_sql">
		  tps_authentication_type.lineid ,
		  tps_authentication_type.linename ,
		  tps_authentication_type.memo 
</sql>

<!-- ElementID:whereClause_sql,Generated=true -->
<sql id="whereClause_sql">
	    <if test="lineid != null">and tps_authentication_type.lineid = #{lineid}</if>
	    <if test="linename != null">and tps_authentication_type.linename = #{linename}</if>
	    <if test="memo != null">and tps_authentication_type.memo = #{memo}</if>
</sql>


<!-- ElementID:E_authentication_typeResult,Generated=true -->
<resultMap id="E_authentication_typeResult" type="com.unlcn.ils.tps.E_authentication_type">
	<id property="lineid" column="lineid"/>
	<result property="linename" column="linename"/>
	<result property="memo" column="memo"/>
</resultMap>


<!-- ElementName:cache,Generated=true -->
<cache type="C2_Default_Dao_Cache"/>

<!-- ElementID:count,Generated=true -->
<select id="count" parameterType="com.unlcn.ils.tps.E_authentication_type" resultType="int">
	select count(*) from tps_authentication_type 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<!-- ElementID:update,Generated=true -->
<update id="update" parameterType="com.unlcn.ils.tps.E_authentication_type">
	update tps_authentication_type
<set>
	<if test="linename != null">linename=#{linename,jdbcType=VARCHAR},</if>
	<if test="memo != null">memo=#{memo,jdbcType=VARCHAR}</if>
</set>
<where>
	<choose>
        <when test="lineid != null">and lineid = #{lineid}</when>
        <otherwise>and lineid = </otherwise>
    </choose>
</where>
</update>

<!-- ElementID:updateNull,Generated=true -->
<update id="updateNull" parameterType="map">
	update tps_authentication_type
	<set>
		<trim suffixOverrides=",">
		    <if test="linename==null">linename = null,</if>
		    <if test="memo==null">memo = null,</if>
		</trim>
	</set>
	<where>
		<choose>
			<when test="lineid != null">and lineid = #{lineid}</when>
			<otherwise>and lineid = </otherwise>
		</choose>
	</where>
</update>

<!-- ElementID:delete,Generated=true -->
<delete id="delete" parameterType="com.unlcn.ils.tps.E_authentication_type">
    delete from tps_authentication_type where 1=1 and lineid = #{lineid}
</delete>

<!-- ElementID:select,Generated=true -->
<select id="select" parameterType="com.unlcn.ils.tps.E_authentication_type" resultMap="E_authentication_typeResult">
	select 
		<include refid="column_sql"/>
	    from tps_authentication_type 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:deleteBatch,Generated=true -->
<delete id="deleteBatch" parameterType="List">
	delete from tps_authentication_type where lineid in
<trim prefix="(" suffix=")" suffixOverrides=",">
<foreach collection="list" item="entity" separator=",">
	#{entity.lineid}
</foreach>
</trim>
</delete>

<!-- ElementID:selectAll,Generated=true -->
<select id="selectAll" resultMap="E_authentication_typeResult">
	select 
		<include refid="column_sql"/>
	    from tps_authentication_type 
</select>

<!-- ElementID:selectByID,Generated=true -->
<select id="selectByID" parameterType="java.lang.Integer" resultMap="E_authentication_typeResult">
	select 
		<include refid="column_sql"/>
	    from tps_authentication_type 
		 where tps_authentication_type.lineid = #{lineid,jdbcType=NUMERIC}
</select>

<!-- ElementID:selectByPage,Generated=true -->
<select id="selectByPage" parameterType="com.unlcn.ils.tps.E_authentication_type" resultMap="E_authentication_typeResult">
	select 
		<include refid="column_sql"/>
	    from tps_authentication_type 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:selectMany,Generated=true -->
<select id="selectMany" parameterType="list" resultMap="E_authentication_typeResult">
select 
	<include refid="column_sql"/> 
	from tps_authentication_type 
	where tps_authentication_type.lineid in (
		select distinct lineid from tps_authentication_type inner join
<foreach collection="list" item="entity" separator="inner join">
		(select 
			distinct lineid
			from tps_authentication_type 
			<where>
	        <if test="entity.lineid != null">and tps_authentication_type.lineid = #{entity.lineid}</if>
	        <if test="entity.linename != null">and tps_authentication_type.linename = #{entity.linename}</if>
	        <if test="entity.memo != null">and tps_authentication_type.memo = #{entity.memo}</if>
			</where>
		) ${entity.tableAlias} using (lineid)
</foreach>
)
</select>

<!-- ElementID:insert,Generated=true -->
<insert id="insert" parameterType="com.unlcn.ils.tps.E_authentication_type" useGeneratedKeys="true">
	<selectKey keyProperty="lineid" resultType="java.lang.Integer" order="AFTER">
        select LAST_INSERT_ID()
    </selectKey>
insert into tps_authentication_type(
		<trim prefixOverrides=",">
		    <if test="linename != null">linename</if>
		    <if test="memo != null">,memo</if>
		</trim>
	 )
	 values (
		<trim prefixOverrides=",">
		    <if test="linename != null">#{linename,jdbcType=VARCHAR}</if>
		    <if test="memo != null">,#{memo,jdbcType=VARCHAR}</if>
        </trim>
	 )
</insert>

<!-- ElementID:insertBatch,Generated=true -->
<insert id="insertBatch" parameterType="list" useGeneratedKeys="true">
	insert into tps_authentication_type (linename,memo)
			values 
			<foreach collection="list" item="entity" index="index" separator=",">
				(
		         #{entity.linename,jdbcType = VARCHAR},
		         #{entity.memo,jdbcType = VARCHAR}
				)
</foreach>
</insert>
</mapper>