<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.unlcn.ils.tps.E_argueMapper">	

<!-- ElementID:column_sql,Generated=true -->
<sql id="column_sql">
		  tps_argue.lineid ,
		  tps_argue.checkhead_lineid ,
		  tps_argue.checkdetail_lineid ,
		  tps_argue.argue_reson ,
		  tps_argue.argue_status ,
		  tps_argue.approve_username ,
		  tps_argue.approve_memo ,
		  tps_argue.approve_time ,
		  tps_argue.approve_status ,
		  tps_argue.create_time ,
		  tps_argue.create_user ,
		  tps_argue.active ,
		  tps_argue.active_user ,
		  tps_argue.active_time ,
		  tps_argue.active_memo 
</sql>

<!-- ElementID:whereClause_sql,Generated=true -->
<sql id="whereClause_sql">
	    <if test="lineid != null">and tps_argue.lineid = #{lineid}</if>
	    <if test="checkheadLineid != null">and tps_argue.checkhead_lineid = #{checkheadLineid}</if>
	    <if test="checkdetailLineid != null">and tps_argue.checkdetail_lineid = #{checkdetailLineid}</if>
	    <if test="argueReson != null">and tps_argue.argue_reson = #{argueReson}</if>
	    <if test="argueStatus != null">and tps_argue.argue_status = #{argueStatus}</if>
	    <if test="approveUsername != null">and tps_argue.approve_username = #{approveUsername}</if>
	    <if test="approveMemo != null">and tps_argue.approve_memo = #{approveMemo}</if>
	    <if test="approveTime != null">and tps_argue.approve_time = #{approveTime}</if>
	    <if test="approveStatus != null">and tps_argue.approve_status = #{approveStatus}</if>
	    <if test="createTime != null">and tps_argue.create_time = #{createTime}</if>
	    <if test="createUser != null">and tps_argue.create_user = #{createUser}</if>
	    <if test="active != null">and tps_argue.active = #{active}</if>
	    <if test="activeUser != null">and tps_argue.active_user = #{activeUser}</if>
	    <if test="activeTime != null">and tps_argue.active_time = #{activeTime}</if>
	    <if test="activeMemo != null">and tps_argue.active_memo = #{activeMemo}</if>
</sql>


<!-- ElementID:E_argueResult,Generated=true -->
<resultMap id="E_argueResult" type="com.unlcn.ils.tps.E_argue">
	<id property="lineid" column="lineid"/>
	<result property="checkheadLineid" column="checkhead_lineid"/>
	<result property="checkdetailLineid" column="checkdetail_lineid"/>
	<result property="argueReson" column="argue_reson"/>
	<result property="argueStatus" column="argue_status"/>
	<result property="approveUsername" column="approve_username"/>
	<result property="approveMemo" column="approve_memo"/>
	<result property="approveTime" column="approve_time"/>
	<result property="approveStatus" column="approve_status"/>
	<result property="createTime" column="create_time"/>
	<result property="createUser" column="create_user"/>
	<result property="active" column="active"/>
	<result property="activeUser" column="active_user"/>
	<result property="activeTime" column="active_time"/>
	<result property="activeMemo" column="active_memo"/>
</resultMap>


<!-- ElementName:cache,Generated=true -->
<cache type="C2_Default_Dao_Cache"/>

<!-- ElementID:count,Generated=true -->
<select id="count" parameterType="com.unlcn.ils.tps.E_argue" resultType="int">
	select count(*) from tps_argue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<!-- ElementID:update,Generated=true -->
<update id="update" parameterType="com.unlcn.ils.tps.E_argue">
	update tps_argue
<set>
	<if test="checkheadLineid != null">checkhead_lineid=#{checkheadLineid,jdbcType=VARCHAR},</if>
	<if test="checkdetailLineid != null">checkdetail_lineid=#{checkdetailLineid,jdbcType=VARCHAR},</if>
	<if test="argueReson != null">argue_reson=#{argueReson,jdbcType=VARCHAR},</if>
	<if test="argueStatus != null">argue_status=#{argueStatus,jdbcType=NUMERIC},</if>
	<if test="approveUsername != null">approve_username=#{approveUsername,jdbcType=VARCHAR},</if>
	<if test="approveMemo != null">approve_memo=#{approveMemo,jdbcType=VARCHAR},</if>
	<if test="approveTime != null">approve_time=#{approveTime,jdbcType=TIMESTAMP},</if>
	<if test="approveStatus != null">approve_status=#{approveStatus,jdbcType=NUMERIC},</if>
	<if test="createTime != null">create_time=#{createTime,jdbcType=TIMESTAMP},</if>
	<if test="createUser != null">create_user=#{createUser,jdbcType=VARCHAR},</if>
	<if test="active != null">active=#{active,jdbcType=NUMERIC},</if>
	<if test="activeUser != null">active_user=#{activeUser,jdbcType=VARCHAR},</if>
	<if test="activeTime != null">active_time=#{activeTime,jdbcType=TIMESTAMP},</if>
	<if test="activeMemo != null">active_memo=#{activeMemo,jdbcType=VARCHAR}</if>
</set>
<where>
	<choose>
        <when test="lineid != null">and lineid = #{lineid}</when>
        <otherwise>and lineid = </otherwise>
    </choose>
</where>
</update>

<!-- ElementID:updateNull,Generated=true -->
<update id="updateNull" parameterType="map">
	update tps_argue
	<set>
		<trim suffixOverrides=",">
		    <if test="checkheadLineid==null">checkhead_lineid = null,</if>
		    <if test="checkdetailLineid==null">checkdetail_lineid = null,</if>
		    <if test="argueReson==null">argue_reson = null,</if>
		    <if test="argueStatus==null">argue_status = null,</if>
		    <if test="approveUsername==null">approve_username = null,</if>
		    <if test="approveMemo==null">approve_memo = null,</if>
		    <if test="approveTime==null">approve_time = null,</if>
		    <if test="approveStatus==null">approve_status = null,</if>
		    <if test="createTime==null">create_time = null,</if>
		    <if test="createUser==null">create_user = null,</if>
		    <if test="active==null">active = null,</if>
		    <if test="activeUser==null">active_user = null,</if>
		    <if test="activeTime==null">active_time = null,</if>
		    <if test="activeMemo==null">active_memo = null,</if>
		</trim>
	</set>
	<where>
		<choose>
			<when test="lineid != null">and lineid = #{lineid}</when>
			<otherwise>and lineid = </otherwise>
		</choose>
	</where>
</update>

<!-- ElementID:delete,Generated=true -->
<delete id="delete" parameterType="com.unlcn.ils.tps.E_argue">
    delete from tps_argue where 1=1 and lineid = #{lineid}
</delete>

<!-- ElementID:select,Generated=true -->
<select id="select" parameterType="com.unlcn.ils.tps.E_argue" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:deleteBatch,Generated=true -->
<delete id="deleteBatch" parameterType="List">
	delete from tps_argue where lineid in
<trim prefix="(" suffix=")" suffixOverrides=",">
<foreach collection="list" item="entity" separator=",">
	#{entity.lineid}
</foreach>
</trim>
</delete>

<!-- ElementID:selectAll,Generated=true -->
<select id="selectAll" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
</select>

<!-- ElementID:selectByID,Generated=true -->
<select id="selectByID" parameterType="java.lang.String" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 where tps_argue.lineid = #{lineid,jdbcType=VARCHAR}
</select>

<!-- ElementID:selectByPage,Generated=true -->
<select id="selectByPage" parameterType="com.unlcn.ils.tps.E_argue" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:selectMany,Generated=true -->
<select id="selectMany" parameterType="list" resultMap="E_argueResult">
select 
	<include refid="column_sql"/> 
	from tps_argue 
	where tps_argue.lineid in (
		select distinct lineid from tps_argue inner join
<foreach collection="list" item="entity" separator="inner join">
		(select 
			distinct lineid
			from tps_argue 
			<where>
	        <if test="entity.lineid != null">and tps_argue.lineid = #{entity.lineid}</if>
	        <if test="entity.checkheadLineid != null">and tps_argue.checkhead_lineid = #{entity.checkheadLineid}</if>
	        <if test="entity.checkdetailLineid != null">and tps_argue.checkdetail_lineid = #{entity.checkdetailLineid}</if>
	        <if test="entity.argueReson != null">and tps_argue.argue_reson = #{entity.argueReson}</if>
	        <if test="entity.argueStatus != null">and tps_argue.argue_status = #{entity.argueStatus}</if>
	        <if test="entity.approveUsername != null">and tps_argue.approve_username = #{entity.approveUsername}</if>
	        <if test="entity.approveMemo != null">and tps_argue.approve_memo = #{entity.approveMemo}</if>
	        <if test="entity.approveTime != null">and tps_argue.approve_time = #{entity.approveTime}</if>
	        <if test="entity.approveStatus != null">and tps_argue.approve_status = #{entity.approveStatus}</if>
	        <if test="entity.createTime != null">and tps_argue.create_time = #{entity.createTime}</if>
	        <if test="entity.createUser != null">and tps_argue.create_user = #{entity.createUser}</if>
	        <if test="entity.active != null">and tps_argue.active = #{entity.active}</if>
	        <if test="entity.activeUser != null">and tps_argue.active_user = #{entity.activeUser}</if>
	        <if test="entity.activeTime != null">and tps_argue.active_time = #{entity.activeTime}</if>
	        <if test="entity.activeMemo != null">and tps_argue.active_memo = #{entity.activeMemo}</if>
			</where>
		) ${entity.tableAlias} using (lineid)
</foreach>
)
</select>

<!-- ElementID:insert,Generated=true -->
<insert id="insert" parameterType="com.unlcn.ils.tps.E_argue">
	insert into tps_argue(
	         <if test="lineid != null">lineid</if>
	         <if test="checkheadLineid != null">,checkhead_lineid</if>
	         <if test="checkdetailLineid != null">,checkdetail_lineid</if>
	         <if test="argueReson != null">,argue_reson</if>
	         <if test="argueStatus != null">,argue_status</if>
	         <if test="approveUsername != null">,approve_username</if>
	         <if test="approveMemo != null">,approve_memo</if>
	         <if test="approveTime != null">,approve_time</if>
	         <if test="approveStatus != null">,approve_status</if>
	         <if test="createTime != null">,create_time</if>
	         <if test="createUser != null">,create_user</if>
	         <if test="active != null">,active</if>
	         <if test="activeUser != null">,active_user</if>
	         <if test="activeTime != null">,active_time</if>
	         <if test="activeMemo != null">,active_memo</if>
	 	 	 )
	 values (
	         <if test="lineid != null">#{lineid,jdbcType=VARCHAR}</if>
	         <if test="checkheadLineid != null">,#{checkheadLineid,jdbcType=VARCHAR}</if>
	         <if test="checkdetailLineid != null">,#{checkdetailLineid,jdbcType=VARCHAR}</if>
	         <if test="argueReson != null">,#{argueReson,jdbcType=VARCHAR}</if>
	         <if test="argueStatus != null">,#{argueStatus,jdbcType=NUMERIC}</if>
	         <if test="approveUsername != null">,#{approveUsername,jdbcType=VARCHAR}</if>
	         <if test="approveMemo != null">,#{approveMemo,jdbcType=VARCHAR}</if>
	         <if test="approveTime != null">,#{approveTime,jdbcType=TIMESTAMP}</if>
	         <if test="approveStatus != null">,#{approveStatus,jdbcType=NUMERIC}</if>
	         <if test="createTime != null">,#{createTime,jdbcType=TIMESTAMP}</if>
	         <if test="createUser != null">,#{createUser,jdbcType=VARCHAR}</if>
	         <if test="active != null">,#{active,jdbcType=NUMERIC}</if>
	         <if test="activeUser != null">,#{activeUser,jdbcType=VARCHAR}</if>
	         <if test="activeTime != null">,#{activeTime,jdbcType=TIMESTAMP}</if>
	         <if test="activeMemo != null">,#{activeMemo,jdbcType=VARCHAR}</if>
	 	 	 )
</insert>

<!-- ElementID:insertBatch,Generated=true -->
<insert id="insertBatch" parameterType="list">
	insert into tps_argue (lineid,checkhead_lineid,checkdetail_lineid,argue_reson,argue_status,approve_username,approve_memo,approve_time,approve_status,create_time,create_user,active,active_user,active_time,active_memo) 
<foreach collection="list" item="entity" index="index" separator="union all">
		select 
		#{entity.lineid,jdbcType = VARCHAR},
				#{entity.checkheadLineid,jdbcType = VARCHAR},
				#{entity.checkdetailLineid,jdbcType = VARCHAR},
				#{entity.argueReson,jdbcType = VARCHAR},
				#{entity.argueStatus,jdbcType = NUMERIC},
				#{entity.approveUsername,jdbcType = VARCHAR},
				#{entity.approveMemo,jdbcType = VARCHAR},
				#{entity.approveTime,jdbcType = TIMESTAMP},
				#{entity.approveStatus,jdbcType = NUMERIC},
				#{entity.createTime,jdbcType = TIMESTAMP},
				#{entity.createUser,jdbcType = VARCHAR},
				#{entity.active,jdbcType = NUMERIC},
				#{entity.activeUser,jdbcType = VARCHAR},
				#{entity.activeTime,jdbcType = TIMESTAMP},
				#{entity.activeMemo,jdbcType = VARCHAR}
		from dual
</foreach>
</insert>
<select id="selectByCheckHeadLineid" parameterType="java.lang.String" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 where tps_argue.checkhead_lineid = #{checkhead_lineid}
</select>
<select id="selectByCheckDetailLineid" parameterType="java.lang.String" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 where tps_argue.checkdetail_lineid = #{checkdetail_lineid}
</select>
<select id="selectByCheckDetailLineidn" parameterType="java.lang.String" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 where tps_argue.checkdetail_lineid = #{checkdetail_lineid} and 
		 tps_argue.argue_status =1;
</select>
<select id="getMaxId" resultMap="E_argueResult">
	SELECT * FROM tps_argue ORDER BY create_time DESC;
</select>
<select id="getMaxIdDesc" parameterType="java.lang.String" resultMap="E_argueResult">
	select 
		<include refid="column_sql"/>
	    from tps_argue 
		 where tps_argue.checkdetail_lineid = #{checkdetail_lineid} 
		 ORDER BY create_time DESC;
</select>
</mapper>